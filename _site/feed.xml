<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Christopher Salam</title>
    <description>thoughts on software and engineering</description>
    <link>ChristopherSalam.github.io</link>
    <atom:link href="ChristopherSalam.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>agricultural</title>
        <description>&lt;p&gt;&lt;img src=&quot;farm.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;I did a degree in Agricultural Engineering, now called Biological Systems Engineering, at UC Davis from 2007-2011, mostly because I was interested in working with &lt;strong&gt;&lt;a href=&quot;http://www.cleanworld.com/our-team/&quot;&gt;Dr. Ruihong Zhang&lt;/a&gt;&lt;/strong&gt;, and her experience and research interests in anaerobic digestion of industrial and agricultural waste. We worked on a project in turkey waste digestion, in partnership with Cargill International, one of the largest meat and agricultural processing companies globally, and the results of the study are &lt;strong&gt;&lt;a href=&quot;http://adsabs.harvard.edu/abs/2011PhDT.......144S&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;. In the end the project ended up giving Cargill the information to setup digesters at their processing facilities, potentially setting up a new diversion path for untold millions of gallons of waste.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;cows.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;I also had the opportunity to work &lt;strong&gt;&lt;a href=&quot;http://www.rcmdigesters.com/about-us/team/&quot;&gt;RCM digesters&lt;/a&gt;&lt;/strong&gt; from 2013-2014. RCM Digesters built manure digesters at Cow, Pig, and Chicken farms. I was able to apply a bit of my research and education here, as well as learn alot about Agriculture and Business in general. I worked on five projects, in Minnesota, Massachusetts, Upstate New York, and in North Eastern Australia. I worked on a very specific part of the anaerobic digestion process called hydrogen sulfide scrubbing, a process of removing a compound that is a trace part of the output of the digester, H2S, a chemical that can cause engine damage and is unsafe to inhale (but no where near the quantity that I experienced in &lt;strong&gt;&lt;a href=&quot;http://chrissalam.com/chemical&quot;&gt;Chemical Engineering&lt;/a&gt;&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;paper.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Both of these experiences were particularly humorous to me as a vegetarian, but secretly I do appreciate the consumption of these goods providing me a job, even if I did find it pretty gnarly and unappetizing.&lt;/p&gt;

&lt;p&gt;In this space, I wanted to mention that there are a bunch of really cool and strange hackathon opportunities. I follow the &lt;strong&gt;&lt;a href=&quot;http://www.apps-for-ag.com/&quot;&gt;Aps for Ag hackathon&lt;/a&gt;&lt;/strong&gt; and attended a recent event in &lt;strong&gt;&lt;a href=&quot;http://kvpr.org/post/farmers-turn-tinder-app-inspiration&quot;&gt;Coalinga&lt;/a&gt;&lt;/strong&gt;, and will attend the upcoming event in Davis. Come with me if you are interested! There are not a lot of developers in the agricultural space and it&amp;#39;s an area ripe for simple software solutions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;cold.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;!-- **This is a stub, there&#39;s more coming** --&gt;
</description>
        <pubDate>Tue, 10 Nov 2015 00:00:00 -0800</pubDate>
        <link>ChristopherSalam.github.io/agricultural/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/agricultural/</guid>
      </item>
    
      <item>
        <title>currying</title>
        <description>&lt;p&gt;Tonight, I watched Cassandra&amp;#39;s talk on functional programming, and I got pretty excited about currying, composing, and piping functions. I wanted to live code some practical examples, as I must admit it took seeing this several times for me to really wrap my head around this topic and I hope this helps!&lt;/p&gt;

&lt;p&gt;I would recommend going to Ramda.js&amp;#39;s website and pulling up a console there. Another option would be to npm install ramda and try these functions there. If you use sublime and do not have a JS build system, try this link from my classmate &lt;a href=&quot;http://jdlawrence.github.io/javascript/closures/2015/08/03/console-inside-sublime-text.html&quot;&gt;Jamil&lt;/a&gt;. You can also grab it from CDN via&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;//cdnjs.cloudflare.com/ajax/libs/ramda/0.17.1/ramda.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Currying is a transformation you can do to allow functions to take their some of their arguments at different times. Currying lets us partially fill the functions and keep them in position for later.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;area&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curryArea&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;curry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;area&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;curryArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// [function]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;curryArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Why is this useful?&lt;/p&gt;

&lt;p&gt;There&amp;#39;s a few reasons I think of just off the top:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Asynchronous functions fail because answers haven&amp;#39;t returned yet. If we run a function and leave it ready to catch the next argument we can process more asynchronously.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can break our entire functions into discrete chunks, allowing preprocessing and storage of information in closures that will eventually process. Also, if they don&amp;#39;t end up processing, rather than get functions run with undefined, we have functions we can assess and pull partial information from.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s a gateway to understanding partial function application, which is even more powerful.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!--

```javascript
function that invokes
var lines = R.invoker(1, &#39;split&#39;)(&#39;/n&#39;);
var split = R.split(&#39;/n&#39;);
```
var getItems = R.compose(
  R.filter(R.propEq(&#39;eventType&#39;,&quot;ITEM_DESTROYED&quot;)),
  R.flatten,
  R.map(R.prop(&#39;events&#39;))
)


--&gt;

&lt;p&gt;&lt;a href=&quot;http://alicekamada.github.io/&quot; &gt;&amp;quot;Pointfree Code is code that never refers to the code it handles:
it focuses on the logic, easier to reason about, and never have to wonder about the state.&amp;quot;&lt;/a&gt;&lt;/p&gt;

&lt;!--Anyways, we had a toy problem earlier in the program that asked us to write the functions for piping and composing functions. A pipe function asked us to create a function such that

```javascript
var newfunc =  R.pipe(func1, func2, func3)
```

where the newfunc(args_provided_to_function_one) --&gt;

&lt;p&gt;&lt;strong&gt;This is a stub, there&amp;#39;s more coming&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Nov 2015 00:00:00 -0800</pubDate>
        <link>ChristopherSalam.github.io/currying/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/currying/</guid>
      </item>
    
      <item>
        <title>software</title>
        <description>&lt;p&gt;start this. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a stub, there&amp;#39;s more coming&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Oct 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/software/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/software/</guid>
      </item>
    
      <item>
        <title>console</title>
        <description>&lt;p&gt;This area I&amp;#39;ve been saving for sundries regarding the console. It&amp;#39;s a pretty powerful little area within the browser you can use to access lots of information. Every now and then you&amp;#39;ll find yourself making a great discovery in the console and you&amp;#39;ll want to grab what you find there and pull it out.&lt;/p&gt;

&lt;p&gt;This is a little trick I found deep on Stack Overflow that hopefully they will make more accessible in the future:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*in console*/&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Data&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...};&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// right click on the edge of the Object&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// store as a temporary variable&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// creates &amp;#39;temp1&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;temp1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// and then run this command&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// to make this is available for&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// pasting in text editor.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;None of this stuff is mine, but was revealed to me by Scott Moss, our AngularJS lecturer, who must be involved with web standards and gets this information in advance. If you go to the console in chrome, certain methods that aren&amp;#39;t common practice are made available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a stub, there&amp;#39;s more coming&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 22 Oct 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/console/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/console/</guid>
      </item>
    
      <item>
        <title>chemical</title>
        <description>&lt;p&gt;I&amp;#39;m a certified Professional Chemical Engineer in the state of California. I mainly did this because I was interested in becoming a P.E. in California, and there were salary benefits at a future government job I could obtain. As demonstrated, patience is not one of my best traits, and after applying about 15-20 jobs where I felt that someone was always in line to take the role, I decided against continuing this strategy and left for private employment. Also I was pretty happy to leave Bakersfield and get back to my partner, family, and friends in the Bay.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;closerig.jpg&quot; alt=&quot;close up rig&quot;&gt;&lt;/p&gt;

&lt;p&gt;I do still love Chemical Engineering. It&amp;#39;s a very interesting profession that deals with lots of the world&amp;#39;s manufacturing processes. Many chemical engineers often work as petroleum engineers, and there are very few schools that teach specifically petroleum engineering, but it is a niche profession that will always attract some of the hardiest incredible people. I was fascinated to learn about all the various different kinds of person I met in the oilfields.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;bigrig.jpg&quot; alt=&quot;bigrig&quot;&gt;&lt;/p&gt;

&lt;p&gt;Oilrigs are beautiful machines, the combine motility and function, they have subdivided tasks into different trucks. I don&amp;#39;t have many pictures of these, but many operations don&amp;#39;t even require these large rigs anymore and can be accomplished with &lt;a href=&quot;https://en.wikipedia.org/wiki/Coiled_tubing&quot;&gt; trucks with large coiled tubes &lt;/a&gt;, which can function to pump cement, oil, water, insert dynamite, and do various other oil-field functions very handily.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.stewartandstevenson.com/assets/galleries/237/tt-100-xc-coiled-tubing.png&quot; alt=&quot;coil rig&quot;&gt;&lt;/p&gt;

&lt;p&gt;We have maybe very little context for oilfields, some have driven past large fields in Los Angeles or the Central Valley. In Bakersfield, the lines between oilfield land and public and private land blur. Everyone is touched by oil, many of the city&amp;#39;s population work in a oil based profession, and that leads many to seek deals or consider oil development on their property, whether that property is rural, farm, industrial, civil, or even suburban.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;subrig.jpg&quot; alt=&quot;suburban rig&quot;&gt;&lt;/p&gt;

&lt;p&gt;I was also kind of surprised to learn but it made sense that these rigs drill 24/7, every does 12 hours on and 12 hours off. It makes sense though! You need to maximum the time this expensive equipment is being used, and the moment it&amp;#39;s done at one location, it needs to move to another. The system is highly optimized. Additionally, wells and all the personnel and equipment costs typically pay themselves back after 2-3 months of oil production, the rest is pure profit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;nightrig.jpg&quot; alt=&quot;night rig&quot;&gt;&lt;/p&gt;

&lt;p&gt;And these go super deep. This is a tag nearly 10000 ft down, but many are down at 1000-3000 ft deep, and the deepwater horizon well was at 5,000 ft, and the deepest wells ever dug are a Russian exploration well in Siberia called &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Kola_Superdeep_Borehole&quot;&gt;Kola Superdeep Borehole&lt;/a&gt;&lt;/strong&gt; which is 40,230 and was completed in 1989 before some new deep weels in the Middle East started to go even deeper.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;nightrigdash.jpg&quot; alt=&quot;dash&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a stub, there&amp;#39;s more coming&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Oct 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/chemical/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/chemical/</guid>
      </item>
    
      <item>
        <title>environmental</title>
        <description>&lt;p&gt;start this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a stub, there&amp;#39;s more coming&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Oct 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/environmental/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/environmental/</guid>
      </item>
    
      <item>
        <title>connecting node &amp; neo4j</title>
        <description>&lt;p&gt;This post is part 4 in a 4 part series. Read the other posts:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/try-neo4j&quot; title=&quot;Getting Started&quot;&gt;Part 1 - Try Neo4j&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;/query-neo4j&quot; title=&quot;Learning Database Language&quot;&gt;Part 2 - Query Neo4j&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;/collision&quot; title=&quot;Resolving Duplicates&quot;&gt;Part 3 - Collisions&lt;/a&gt;&lt;/strong&gt; | Part 4 | &lt;strong&gt;&lt;a href=&quot;https://github.com/upstanding-biome/sixdegrees&quot;&gt;Repo&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;http://sixdribbles.com&quot;&gt;Site&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This post addresses a major struggle we had with this project. Within 4 days we were able to build a neo4j database accessing our local database to produce connections and render them to the screen... on localhost. We did not realize that the journey towards hosting the site would take another month (and have to be worked on in the midst of two other projects, i.e. on Sunday or 12pm-2am was the only time we had to work). The main challenge for me was a fundamental learning curve with Nodejs and noe4j and using two techologies to make this process work with heroku.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Graph Story, a company that provides instructions for a neo4j instance on heroku (and other hosting services, I&amp;#39;m sure)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Seraph, a tiny library written to allow neo4j to render to the client and dodge CORS (cross origin resource sharing) conflicts.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll begin to share snippets from the code here and hopefully prevent slowdown for future neo4j experimenters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a stub, there&amp;#39;s more coming&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/node-neo4j/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/node-neo4j/</guid>
      </item>
    
      <item>
        <title>regexp(?:\.js)</title>
        <description>&lt;p&gt;I love regular expressions!&lt;/p&gt;

&lt;p&gt;This post is part 3 in a 3 part series. Read the other posts:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/try-regexp&quot; title=&quot;Getting Started&quot;&gt;Part 1 - Try regexp&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;/O(r)&quot; title=&quot;O dot R notation&quot;&gt;Part 2 - O(r)&lt;/a&gt;&lt;/strong&gt; | Part 3&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://demesheo.github.io/&quot;&gt;Demesheo Wilson II&lt;/a&gt;&lt;/strong&gt; approached me with help on a regexp problem which was a very small part of the for the project his team was working on called &lt;strong&gt;&lt;a href=&quot;http://gogitit.co/&quot;&gt;Go Git it!&lt;/a&gt;&lt;/strong&gt;, which keeps track of the JavaScript frameworks people are using. Here&amp;#39;s the case he presented to me: how do I read a javascript framework such as react.js from a cdn call in index.html or a package.json?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;react.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I immediately thought the solution was going to involve a regexp technique I was not that familiar with called lookaheads. Lookaheads are a rarely used feature of the regular expression syntax which match while looking ahead to allow you to remove part of the text from the match.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;ve never used &lt;strong&gt;&lt;a href=&quot;http://regexr.com/&quot;&gt;regexr&lt;/a&gt;&lt;/strong&gt;, now&amp;#39;s a good time. I&amp;#39;ll include some screenshots so we can follow along.&lt;/p&gt;

&lt;p&gt;Ideally, we just want the word react from the above sentence. This is what ended up working perfectly:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//gets .js including .min.js&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/[\w.-]+(?=\.js)/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;final.min.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s through each part one by one.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/-----/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Regular Expressions are objects that use the bracket syntax. Anything between these letters is a pattern to match. The g global or g flag says give me all the instances of this match, otherwise we just get the first match.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/\w+/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;words.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;\w+ looks for all word like characters, and includes numbers for things like d3. This picks up way too much.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/\w+\.js/g&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;same&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/\w+(\.js)/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;noCapture.png&quot;/&gt;
-is the same as-
&lt;img src=&quot;needDash.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Adding .js to the Regular Expression does a lot for us. So two big problems to address stick out here. Minified files really throw off this process. Also, dashes need to be addressed. We escape (use ) on the . because . means any character in Regular Expressions, and . means specifically the . character. Parentheses around the .js is needed for the lookahead that&amp;#39;s coming.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/\w+(?=\.js)/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;posLook.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;With this step, we&amp;#39;ve removed the .js from the back of the files. Now let&amp;#39;s address min and dash. We need to use brackets to give us options in addition to \w. Lets get \w, periods, and dashes, and use brackets to allow for all three options. We will place the + sign outside the brackets to allow for any combination of them to be matched.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/[\w.-]+(?=\.js)/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;dashesdots.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s nearly there! So the rest I&amp;#39;m not sure how Demesheo ended up processing these files, but one approach just grabs the d3 from d3.min.js but misses the js files.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/[\w-]+(?=\.min\.js)/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another approach is something you can run on your already matched text to remove the &amp;quot;.min&amp;quot;. Don&amp;#39;t run this on the whole document because then you&amp;#39;ll run into the min.css.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//removes min&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/[\w-]+(?=\.min)/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;s all I got on $(this). Regular expressions are pretty powerful things! Hope this was helpful and has some application for you.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Oct 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/regexp.js/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/regexp.js/</guid>
      </item>
    
      <item>
        <title>tape tests</title>
        <description>&lt;p&gt;This is part 4 of 4 of the React Native series.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/try-RN&quot; title=&quot;Getting Started&quot;&gt;Part 1 - Try RN&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;/RN-snapshots&quot; title=&quot;React Native &amp;amp; Firebase Snapshots&quot;&gt;Part 2 - RN/Firebase snapshots&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/RN-updates&quot; title=&quot;React Native &amp;amp; Firebase Updates&quot;&gt;Part 3 - RN/Firebase updates&lt;/a&gt;&lt;/strong&gt; | Part 4&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/TheTinyBullets/Katfish_Xcode&quot;&gt;Repo&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;http://katfish.me&quot;&gt;Screenshots&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tape testing is hella boss! Tape testing in React Native works like a dream. Well...
more like a dream in the way that Inception was a dream. There are some constant asychronous issues but it was for us one of the best ways to test our application. I recommend it as a way to get testing into your React Native pages.&lt;/p&gt;

&lt;p&gt;Tape uses the TAP method of outputing testing information. This is a standard rubric sort of for what information should be in tests and should not be in tests. Tape can be included in your files with a require statement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a stub... there&amp;#39;s more to come&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Sep 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/tape-tests/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/tape-tests/</guid>
      </item>
    
      <item>
        <title>RN updates</title>
        <description>&lt;p&gt;This is part 3 of 4 of the React Native series.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/try-RN&quot; title=&quot;Getting Started&quot;&gt;Part 1 - Try RN&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;/RN-snapshots&quot; title=&quot;React Native &amp;amp; Firebase Snapshots&quot;&gt;Part 2 - RN/Firebase snapshots&lt;/a&gt;&lt;/strong&gt; | Part 3&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/tape-tests&quot; title=&quot;Testing in React Native using Tape&quot;&gt;Part 4 - RN &amp;amp; Tape Tests&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/TheTinyBullets/Katfish_Xcode&quot;&gt;Repo&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;http://katfish.me&quot;&gt;Screenshots&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this update, I will discuss how we used scrollview and javascript to create a populating list that voted in a nested tree for our React Native and Firebase project. We probably could have used ListView, but were able to make this quickly work and decided to stick with it. We&amp;#39;ll go through the entire setup and talk about each of the parts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;Friends.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The final result is this screen shown above, in our program a place you can look up your friend and vote on their qualities, with your unique facebook ID as the key and true as the value. Let&amp;#39;s start at the very beginning of this page. We are going to leave out the tab bar and other parts of this phone and the facebook image and just focus on the listview since that&amp;#39;s where Firebase is involved.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We should start every bit of code with &amp;#39;use strict&amp;#39;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*===============================||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   Required sources            ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||===============================*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./styles&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./PersonDB&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Within the PersonDB file, we have information on a specific
person. Person.id accesses their new generated facebook ID for this application. We can use this unique to our application code to grab a facebook profile image and to use as a unique key for voting.
&lt;code&gt;javascript
  Firebase = require(&amp;#39;firebase&amp;#39;),
  ref = new Firebase(url),
  tallyNav = require(&amp;#39;./tallyNav&amp;#39;),
  personRef;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;tallyNav is another option menu with votes tallied up.
The main thing to note here is that we reference the database here with &amp;#39;ref&amp;#39;.
personRef is nested to individuals, or leaf nodes within &amp;#39;ref&amp;#39;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*================================||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   React native variables,      ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   used as inline tags          ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||================================*/&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;ScrollView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;TouchableHighlight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;TouchableOpacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This section doesn&amp;#39;t look like traditional javascript and is
always hard to look at coming from JavaScript 5. This is &lt;strong&gt;&lt;a href=&quot;http://babeljs.io/docs/learn-es2015/#destructuring&quot;&gt;destructuring&lt;/a&gt;&lt;/strong&gt; and conceptually it is adding these items to React and moving forward.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*================================||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   Each list item and quality   ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||================================*/&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;qualities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;baller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;leader&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;performer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;teacher&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the list of traits. Indents is empty, but it will be filled when we prepare the qualities below with update commands that let them access our firebase database.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*================================||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   This menu each button to     ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   hit the specific quality     ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   Use null to remove items     ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||   or true to add items         ||&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;||================================*/&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FeaturedNav&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FeaturedNav&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTraits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Within this function we make our updaters.
Anywhere else and these don&amp;#39;t trigger correctly.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TouchableHighlight&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;underlayColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;See your friend&amp;#39;s stats&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Stats for &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tallyNav&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;leftButtonTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Back&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;onLeftButtonPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This section lets us move to another screen, which shows the results of the voting.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//facebook image&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This templating in particular really argues with the blogging&amp;#39;s templating, so here&amp;#39;s a screenshot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;fbImage.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;This section is the logic behind grabbing the facebook profile. If you have an ID generated from your login you are good to go. I&amp;#39;m going to leave blogging about Facebook&amp;#39;s login SDK for React Native to my partners &lt;strong&gt;&lt;a href=&quot;http://kent10ou.github.io&quot;&gt; Kent &lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;http://ceditoph.github.io/&quot;&gt; Casey &lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This mostly styling, you can gloss over it. The important bit is that I drop in the &amp;quot;indents&amp;quot; variable here. I&amp;#39;ll describe in detail how to fill indents.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navOverlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navChoiceText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Text&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/View&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Image&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/TouchableHighlight&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ScrollView&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;onScroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;onScroll!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;scrollEventThrottle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;contentInset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/ScrollView&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Image&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/View&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the render function, we invoked a getTraits function. Here it is in all it&amp;#39;s glory.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;getTraits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;personRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pond&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we access the database at the very specific person we are interested with voting on.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;qualities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Katfish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the specific information we are voting with. This can be used with any keyvalue pair, but the window.Katfish.userID is specifically who you are in our program. PersonID is who you are voting on and window.Katfish.userID. A true vote helps us add to our firebase database, false is also possible and will be important in the future to prevent &amp;quot;re-voting&amp;quot;, and a null value here would remove the vote from our database if needed. We will only use true to vote here.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runIt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This part is super key. Without this function (which is invoked immediately below), we do not have a way to change the place at which we vote in our database on different qualities. This function is absolutely required.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;indents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TouchableHighlight&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;featNavButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;underlayColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rgba(200,28,78,0.2)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;personRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;qualities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;splice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;qualities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here in this crucial section, personRef.child(variable).update(vote) gives the user the ability to vote on various features of a single person, with different types of vote tied to their username.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;featNavButtonText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;qualities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Text&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/TouchableHighlight&amp;gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;qualities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here we wrap it up. The {qualities[i]} is simply the text of each feature, however, the immediately invoked function with qualities[i] as an argument is the way that our function fills the scrollview with clickable highlights that work, subbing in for variable. Pretty nifty right? Once we got one of these going, we were able to make a pretty quick application of it. Cheers!&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Sep 2015 00:00:00 -0700</pubDate>
        <link>ChristopherSalam.github.io/RN-updates/</link>
        <guid isPermaLink="true">ChristopherSalam.github.io/RN-updates/</guid>
      </item>
    
  </channel>
</rss>